name: Django chat app  CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx

#    - name: Create .env file
#      run: |
#        echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
#        echo DEBUG=${{ secrets.DEBUG }} >> .env
#        echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#        echo DB_USER=${{ secrets.DB_USER }} >> .env
#        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
#        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
    - name: Create .env file
      run: |
        printf 'SECRET_KEY="%s"\n' "${{ secrets.SECRET_KEY }}" >> .env
        printf 'DEBUG="%s"\n' "${{ secrets.DEBUG }}" >> .env
        printf 'DB_ENGINE="%s"\n' "${{ secrets.DB_ENGINE }}" >> .env
        printf 'DB_NAME="%s"\n' "${{ secrets.DB_NAME }}" >> .env
        printf 'DB_USER="%s"\n' "${{ secrets.DB_USER }}" >> .env
        printf 'DB_PASSWORD="%s"\n' "${{ secrets.DB_PASSWORD }}" >> .env
        printf 'DB_HOST="%s"\n' "${{ secrets.DB_HOST }}" >> .env
        printf 'DB_PORT="%s"\n' "${{ secrets.DB_PORT }}" >> .env

    - name: Build and push Docker image
      run: docker-compose build

    - name: Start Docker services
      run: docker-compose up -d

    - name: Run Django tests
      run: docker-compose exec web python manage.py test
